- name: Install OS Packages
  hosts: localhost
  roles:
    - role: ansible-hashicorp-toolbox
      when: ansible_os_family != "Darwin"
    - role: ansible-virtualbox
      when: >
        ansible_os_family == "Debian" or
        ansible_distribution == "Fedora" and
        ansible_virtualization_role != "guest"
  pre_tasks:
    - block:
        - name: Upgrading OS Packages
          pacman:
            update_cache: true
            upgrade: true
          become: true

        - name: Installing OS Packages
          pacman:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          become: true
          with_items: "{{ arch_packages }}"

      when: ansible_os_family == "Archlinux"

    - block:
        - name: Ensuring Homebrew Is Installed
          stat:
            path: /usr/local/bin/brew
          register: homebrew_check

        - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
          fail:
            msg: Homebrew is missing...Install from http://brew.sh/
          when: >
            not homebrew_check.stat.exists and
            not install_homebrew_if_missing

        - name: Installing Homebrew
          command: >
            /usr/bin/ruby -e \
            $(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)
          when: >
            not homebrew_check.stat.exists and
            install_homebrew_if_missing

      when: ansible_os_family == "Darwin"

  tasks:
    - block:
        - name: Updating Homebrew
          homebrew:
            update_homebrew: "{{ update_homebrew }}"
          when: homebrew_check.stat.exists

        - name: Upgrading Homebrew Packages
          homebrew:
            upgrade_all: "{{ upgrade_homebrew_packages }}"
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Taps
          homebrew_tap:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          with_items: "{{ brew_taps }}"
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Packages
          homebrew:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          with_items: "{{ brew_packages }}"
          when: homebrew_check.stat.exists

        - name: Installing Homebrew Cask Packages
          homebrew_cask:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          with_items: "{{ brew_cask_packages }}"
          when: homebrew_check.stat.exists

      when: ansible_os_family == "Darwin"

    - block:
        - name: Updating Apt Cache
          apt:
            update_cache: true
            cache_valid_time: 3600
          become: true

        - name: Installing OS Packages
          apt:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          become: true
          with_items: "{{ debian_packages }}"

        - name: Installing ATOM Editor
          apt:
            deb: "{{ atom_editor_dl }}/atom-amd64.deb"
            state: present
          become: true

        # https://www.dropbox.com/install-linux
        # This should never have to change
        - name: Installing Dropbox Helper Application
          apt:
            deb: https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2015.10.28_amd64.deb
          become: true

        - name: Adding Google Chrome Repo Key
          apt_key:
            url: https://dl-ssl.google.com/linux/linux_signing_key.pub
            state: present
          become: true

        - name: Adding Google Chrome Repo
          apt_repository:
            repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
            filename: google-chrome
            state: present
          become: true

        - name: Installing Google Chrome
          apt:
            name: google-chrome-stable
            state: present
          become: true

        - name: Adding VS Code Repo Key
          apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            state: present
          become: true

        - name: Adding VS Code Repo
          apt_repository:
            repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
            state: present
          become: true

        - name: Installing VS Code
          apt:
            name: code
            state: present
          become: true

        - name: Removing Redundant VS Code Repo
          file:
            path: /etc/apt/sources.list.d/vscode.list
            state: absent
          become: true
          register: _vscode_repo_removed

        - name: Updating Apt Cache
          apt:
            update_cache: true
          become: true
          when: _vscode_repo_removed['changed']

      when: ansible_os_family == "Debian"

    - block:
        - name: Adding Dropbox Repo
          yum_repository:
            name: dropbox
            description: Dropbox Repository
            baseurl: "http://linux.dropbox.com/{{ ansible_distribution|lower }}/{{ ansible_distribution_version }}/"
            enabled: true
            gpgcheck: true
            gpgkey: "http://linux.dropbox.com/{{ ansible_distribution|lower }}/rpm-public-key.asc"
          become: true

        - name: Adding Google Chrome Repo
          yum_repository:
            name: google-chrome
            description: Google Chrome
            baseurl: http://dl.google.com/linux/chrome/rpm/stable/$basearch
            enabled: true
            gpgcheck: true
            gpgkey: https://dl-ssl.google.com/linux/linux_signing_key.pub
          become: true

      when: ansible_os_family == "RedHat"

    - block:
        - name: Installing EPEL-Release
          yum:
            name: epel-release
          become: true

        - name: Installing OS Packages
          yum:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          become: true
          with_items: "{{ redhat_packages }}"

        - name: Installing ATOM Editor
          yum:
            name: "{{ atom_editor_dl }}/atom.x86_64.rpm"
            state: present
          become: true

        - name: Installing Dropbox
          yum:
            name: nautilus-dropbox
            state: present
          become: true

        - name: Installing Google Chrome
          yum:
            name: google-chrome-stable
            state: present
          become: true

        - name: Adding VS Code Repo
          yum_repository:
            name: vscode
            description: Visual Studio Code
            baseurl: https://packages.microsoft.com/yumrepos/vscode
            enabled: true
            gpgcheck: true
            gpgkey: https://packages.microsoft.com/keys/microsoft.asc
          become: true

        - name: Installing VS Code
          yum:
            name: code
            state: present
          become: true

      when: >
        ansible_os_family == "RedHat" and
        ansible_distribution != "Fedora"

    - block:
        - name: Updating vim-minimal (If Installed)
          command: dnf update -y vim-minimal
          become: true

        - name: Installing OS Packages
          dnf:
            name: "{{ item['name'] }}"
            state: "{{ item['state'] }}"
          become: true
          with_items: "{{ redhat_packages }}"

        - name: Installing ATOM Editor
          dnf:
            name: "{{ atom_editor_dl }}/atom.x86_64.rpm"
            state: present
          become: true

        - name: Installing Dropbox
          dnf:
            name: nautilus-dropbox
            state: present
          become: true

        - name: Installing Google Chrome
          dnf:
            name: google-chrome-stable
            state: present
          become: true

        - name: Adding VS Code Repo
          yum_repository:
            name: vscode
            description: Visual Studio Code
            baseurl: https://packages.microsoft.com/yumrepos/vscode
            enabled: true
            gpgcheck: true
            gpgkey: https://packages.microsoft.com/keys/microsoft.asc
          become: true

        - name: Installing VS Code
          dnf:
            name: code
            state: present
          become: true

      when: >
        ansible_os_family == "RedHat" and
        ansible_distribution == "Fedora"

    - name: Installing Ruby Gems
      gem:
        name: "{{ item['name'] }}"
        state: "{{ item['state'] }}"
      become: true
      with_items: "{{ gem_packages }}"
      when: >
        gem_packages is defined

    - name: Installing NPM Packages
      npm:
        name: "{{ item['name'] }}"
        state: "{{ item['state'] }}"
        global: "{{ item['global'] }}"
      become: true
      with_items: "{{ npm_packages }}"
      when: >
        npm_packages is defined and
        item['global']

    - name: Installing NPM Packages
      npm:
        name: "{{ item['name'] }}"
        state: "{{ item['state'] }}"
        global: "{{ item['global'] }}"
      become: false
      with_items: "{{ npm_packages }}"
      when: >
        npm_packages is defined and
        not item['global']

    - name: Installing Python Modules
      pip:
        name: "{{ item['name'] }}"
        state: "{{ item['state']}}"
      with_items: "{{ python_modules }}"
      when: >
        python_modules is defined and
        (ansible_distribution != "Fedora" and
        ansible_distribution != "Ubuntu" and
        ansible_distribution != "Linux Mint" and
        ansible_os_family != "Archlinux")

    - name: Installing Python Modules
      pip:
        name: "{{ item['name'] }}"
        state: "{{ item['state'] }}"
      become: true
      with_items: "{{ python_modules }}"
      when: >
        python_modules is defined and
        (ansible_distribution == "Fedora" or
        ansible_distribution == "Ubuntu" or
        ansible_distribution == "Linux Mint" or
        ansible_os_family == "Archlinux")

    - name: Capturing ATOM Packages
      shell: apm list | awk '{ print $2 }'
      register: _apm_list
      changed_when: false

    - name: Installing ATOM Packages
      command: "apm install {{ item }}"
      with_items: "{{ atom_editor_packages }}"
      when: item not in _apm_list['stdout']

    - name: Installing Oh My ZSH
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh
        dest: $HOME/.oh-my-zsh
      when: install_oh_my_zsh

    - name: Capturing Current User
      set_fact:
        _current_user: "{{ lookup('env','USER') }}"
      become: false

    - name: Changing Shell To ZSH
      user:
        name: "{{ _current_user }}"
        shell: /bin/zsh
      become: true
      when: install_oh_my_zsh

    - name: Installing Meslo Powerline Font
      get_url:
        url: https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf?raw=true
        dest: $HOME/Library/Fonts/Meslo LG M Regular for Powerline.ttf
      when: >
        ansible_os_family == "Darwin" and
        install_oh_my_zsh

    - name: Installing VS Code Extensions
      shell: cat $HOME/.dotfiles/Code/extensions.list | xargs -L1 code --install-extension
      when: >
            ansible_os_family != "Archlinux"
